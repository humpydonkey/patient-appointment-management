from typing import Protocol, Sequence
from app.domain.models import Patient, Appointment, AppointmentStatus
from datetime import datetime, date


class PatientRepository(Protocol):
    def find_by_phone_and_dob(self, phone_e164: str, dob: date) -> list[Patient]: ...
    def get_by_id(self, patient_id: str) -> Patient | None: ...


class AppointmentRepository(Protocol):
    def list_upcoming_by_patient(
        self, patient_id: str, now: datetime
    ) -> list[Appointment]: ...
    def get_by_id(self, appointment_id: str) -> Appointment | None: ...
    def update_status(
        self, appointment_id: str, status: AppointmentStatus
    ) -> Appointment: ...


class OTPRepository(Protocol):
    def set_otp(self, session_id: str, otp_hash: str, expires_at: datetime) -> None: ...
    def get_otp(self, session_id: str) -> tuple[str, datetime] | None: ...
    def clear_otp(self, session_id: str) -> None: ...


class SessionRepository(Protocol):  # in-memory for dev
    def get(self, session_id: str) -> dict | None: ...
    def set(self, session_id: str, state_dict: dict) -> None: ...
    def delete(self, session_id: str) -> None: ...
